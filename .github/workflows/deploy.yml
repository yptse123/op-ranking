name: Deploy to Mac Mini
on: [push]
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: SSH and Deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.MAC_MINI_IP }}
        username: ${{ secrets.MAC_MINI_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: 22
        script: |
          cd /Users/yptse123/Documents/op-ranking
          
          # Install Git LFS if not available
          if ! command -v git-lfs >/dev/null 2>&1; then
            echo "Installing Git LFS..."
            brew install git-lfs
          fi
          
          # Configure Git LFS and pull files
          git lfs install
          git pull
          git lfs pull
          
          # Verify SQL file content (should not show Git LFS pointer)
          echo "Checking SQL file content:"
          head -n 5 /Users/yptse123/Documents/op-ranking/admin/sql/001_op_ranking.sql
          
          # Set up PATH for Docker
          export PATH=$PATH:/usr/local/bin:/opt/homebrew/bin
          
          # Check if Docker is available
          if command -v docker >/dev/null 2>&1; then
            echo "Docker found in PATH"
            
            # Configure Docker to use password-less authentication for this session
            export DOCKER_CLI_EXPERIMENTAL=enabled
            mkdir -p ~/.docker
            
            # Create or update Docker config to skip credential helper
            echo '{"credsStore":"", "auths":{"https://index.docker.io/v1/":{}}}' > ~/.docker/config.json
            
            # Force clean environment to ensure SQL migrations run
            docker compose down -v || true
            docker volume rm op-ranking-db-data || true
            
            # Try docker compose command (newer Docker versions use 'docker compose')
            if docker compose version >/dev/null 2>&1; then
              echo "Using 'docker compose' command..."
              docker compose build --no-cache
              docker compose up -d
              
              # Wait for DB to be ready and check logs
              echo "Waiting for database to initialize..."
              sleep 15
              docker compose logs db
            else
              # Fall back to docker-compose
              echo "Using 'docker-compose' command..."
              docker-compose build --no-cache
              docker-compose up -d
              
              # Wait for DB to be ready and check logs
              echo "Waiting for database to initialize..."
              sleep 15
              docker-compose logs db
            fi
          else
            echo "ERROR: Docker is not installed or not in PATH"
            echo "Please install Docker Desktop for Mac"
            exit 1
          fi